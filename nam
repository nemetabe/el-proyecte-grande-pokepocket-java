# Dockerfile for the Java Backend

# Step 1: The "Builder" Stage - Where we compile the application
# We use a Java 21 development environment (JDK) as a base. We name this stage "builder".

FROM eclipse-temurin:21-jdk-jammy AS builder

# Set the working directory inside the container to /app

WORKDIR /app

# Copy the Maven configuration files

COPY .mvn/ .mvn
COPY mvnw pom.xml ./

# Download project dependencies using Maven (speeds up future builds)

RUN ./mvnw dependency:go-offline

# Copy the source code

COPY ./src ./src

# Compile and package the application (into a .jar file) using Maven

RUN ./mvnw clean install

###

# Step 2: Creating the final, runnable Image - This will be our "magic box"
# We use a smaller base image containing only the Java Runtime Environment (JRE) (Alpine Linux is small and fast)

FROM eclipse-temurin:21-jre-alpine

# Set the working directory
WORKDIR /app

# Copy ONLY the compiled .jar file from the "builder" stage!
# This makes the final image much smaller, as it doesn't contain the unnecessary build tools.
COPY --from=builder /app/target/*.jar /app/*.jar
# Specify the command to run when the container starts (launch our Java application)
ENTRYPOINT ["java", "-jar", "/app/*.jar"]